#
# Nmake file For libslink - MS Visual C/C++
# Use 'nmake -f Makefile.win'

NODEBUG=1

INCS = /I. /Imbedtls\include
OPTS = /O2 /D_CRT_SECURE_NO_WARNINGS
SL_LIB = libslink.lib
SL_DLL = libslink.dll
SL_DEF = libslink.def

OBJS=	config.obj		\
		genutils.obj	\
		globmatch.obj	\
		logging.obj		\
		network.obj		\
		payload.obj		\
		slutils.obj		\
		statefile.obj

all: mbedtls-lib lib

# Build mbedtls library by running cmake to build NMake files and then nmake
mbedtls-lib:
	@pushd mbedtls && cmake -DENABLE_TESTING=Off -DENABLE_PROGRAMS=Off -G "NMake Makefiles" -S . -B build && $(MAKE) /NOLOGO /f Makefile lib /$(MAKEFLAGS) & popd

lib: $(OBJS)
	link.exe /lib /nologo /out:$(SL_LIB) $(OBJS) mbedtls\library\CMakeFiles\mbedtls.dir\*.obj mbedtls\library\CMakeFiles\mbedx509.dir\*.obj mbedtls\library\CMakeFiles\mbedcrypto.dir\*.obj

dll: $(OBJS)
	link.exe /dll /nologo /dev:$(libslink.def) /out:$(SL_DLL) $(OBJS) mbedtls\library\CMakeFiles\mbedtls.dir\*.obj mbedtls\library\CMakeFiles\mbedx509.dir\*.obj mbedtls\library\CMakeFiles\mbedcrypto.dir\*.obj

.c.obj:
	$(CC) /nologo $(CFLAGS) $(INCS) $(OPTS) /c $<

# Clean-up directives
clean:
	-del a.out core *.o *.obj *% *~ $(SL_LIB) $(SL_DLL)
	@pushd mbedtls && $(MAKE) /NOLOGO /f Makefile clean /$(MAKEFLAGS) & popd
